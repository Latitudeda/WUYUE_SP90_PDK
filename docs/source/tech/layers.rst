layers.py
==============

The layers are auto-generated by filling the ``layers.csv`` file, ``FLYLINE_MARK`` layer is defined by **Latitudeda** for display.

::

    class LAYER(TECH.LAYER):
        WGS_COR = Layer(PROCESS.WGS, PURPOSE.COR, 'SOI waveguide shallow etch core')
        WGS_CLD = Layer(PROCESS.WGS, PURPOSE.CLD, 'SOI waveguide shallow etch cladding')
        WGS_TRE = Layer(PROCESS.WGS, PURPOSE.TRE, 'SOI waveguide shallow etch trench')
        WGS_PINREC = Layer(PROCESS.WGS, PURPOSE.PINREC, 'SOI waveguide shallow etch pin recognition')
        WGM_COR = Layer(PROCESS.WGM, PURPOSE.COR, 'SOI waveguide medium etch core')
        WGM_CLD = Layer(PROCESS.WGM, PURPOSE.CLD, 'SOI waveguide medium etch cladding')
        WGM_TRE = Layer(PROCESS.WGM, PURPOSE.TRE, 'SOI waveguide medium etch trench')
        WGM_PINREC = Layer(PROCESS.WGM, PURPOSE.PINREC, 'SOI waveguide medium etch pin recognition')
        WGF_COR = Layer(PROCESS.WGF, PURPOSE.COR, 'SOI waveguide full etch core')
        WGF_CLD = Layer(PROCESS.WGF, PURPOSE.CLD, 'SOI waveguide full etch cladding')
        WGF_DUMB = Layer(PROCESS.WGF, PURPOSE.DUMB, 'SOI waveguide full etch dummy block')
        WGF_PINREC = Layer(PROCESS.WGF, PURPOSE.PINREC, 'SOI waveguide full etch pin recognition')
        NMOD_DRW = Layer(PROCESS.NMOD, PURPOSE.DRW, 'N IMP for modulator slab')
        PMOD_DRW = Layer(PROCESS.PMOD, PURPOSE.DRW, 'P IMP for modulator slab')
        NDD_DRW = Layer(PROCESS.NDD, PURPOSE.DRW, 'N IMP for modulator diode')
        PDD_DRW = Layer(PROCESS.PDD, PURPOSE.DRW, 'P IMP for modulator diode')
        NCT_DRW = Layer(PROCESS.NCT, PURPOSE.DRW, 'N+ IMP for CT')
        PCT_DRW = Layer(PROCESS.PCT, PURPOSE.DRW, 'P+ IMP for CT')
        SNS_COR = Layer(PROCESS.SNS, PURPOSE.COR, 'SiN waveguide shallow etch core')
        SNS_CLD = Layer(PROCESS.SNS, PURPOSE.CLD, 'SiN waveguide shallow etch cladding')
        SNS_TRE = Layer(PROCESS.SNS, PURPOSE.TRE, 'SiN waveguide shallow etch trench')
        SNS_PINREC = Layer(PROCESS.SNS, PURPOSE.PINREC, 'SiN waveguide shallow etch pin recognition')
        SNF_COR = Layer(PROCESS.SNF, PURPOSE.COR, 'SiN waveguide full etch core')
        SNF_CLD = Layer(PROCESS.SNF, PURPOSE.CLD, 'SiN waveguide full etch cladding')
        SNF_DUMB = Layer(PROCESS.SNF, PURPOSE.DUMB, 'SiN waveguide full etch dummy block')
        SNF_PINREC = Layer(PROCESS.SNF, PURPOSE.PINREC, 'SiN waveguide full etch pin recognition')
        GE_DRW = Layer(PROCESS.GE, PURPOSE.DRW, 'Ge trench')
        GE_DUMB = Layer(PROCESS.GE, PURPOSE.DUMB, 'Ge trench dummy block')
        SAB_REV = Layer(PROCESS.SAB, PURPOSE.REV, 'Salicide area')
        CT_DRW = Layer(PROCESS.CT, PURPOSE.DRW, 'Contact')
        M1_DRW = Layer(PROCESS.M1, PURPOSE.DRW, 'Metal 1')
        M1_SLOT = Layer(PROCESS.M1, PURPOSE.SLOT, 'Metal 1 slot')
        M1_DUMB = Layer(PROCESS.M1, PURPOSE.DUMB, 'Metal 1 dummy block')
        M1_PINREC = Layer(PROCESS.M1, PURPOSE.PINREC, 'Metal 1 pin recognition')
        MTH_DRW = Layer(PROCESS.MTH, PURPOSE.DRW, 'TiN Heater')
        EC1_DRW = Layer(PROCESS.EC1, PURPOSE.DRW, 'Nitride edge coupler1 between M1 and M2')
        V1_DRW = Layer(PROCESS.V1, PURPOSE.DRW, 'Via 1')
        M2_DRW = Layer(PROCESS.M2, PURPOSE.DRW, 'Metal 2')
        M2_SLOT = Layer(PROCESS.M2, PURPOSE.SLOT, 'Metal 2 slot')
        M2_DUMB = Layer(PROCESS.M2, PURPOSE.DUMB, 'Metal 2 dummy block')
        M2_PINREC = Layer(PROCESS.M2, PURPOSE.PINREC, 'Metal 2 pin recognition')
        EC2_DRW = Layer(PROCESS.EC2, PURPOSE.DRW, 'Nitride edge coupler2 between M2 and M3')
        V2_DRW = Layer(PROCESS.V2, PURPOSE.DRW, 'Via 2')
        M3_DRW = Layer(PROCESS.M3, PURPOSE.DRW, 'Metal 3')
        M3_SLOT = Layer(PROCESS.M3, PURPOSE.SLOT, 'Metal 3 slot')
        M3_DUMB = Layer(PROCESS.M3, PURPOSE.DUMB, 'Metal 3 dummy block')
        M3_PINREC = Layer(PROCESS.M3, PURPOSE.PINREC, 'Metal 3 pin recognition')
        EC3_DRW = Layer(PROCESS.EC3, PURPOSE.DRW, 'Nitride edge coupler2 between M3 and TM')
        TV_DRW = Layer(PROCESS.TV, PURPOSE.DRW, 'Top Via')
        TM_DRW = Layer(PROCESS.TM, PURPOSE.DRW, 'Top metal')
        TM_SLOT = Layer(PROCESS.TM, PURPOSE.SLOT, 'Top metal slot')
        TM_DUMB = Layer(PROCESS.TM, PURPOSE.DUMB, 'Top metal dummy block')
        TM_PINREC = Layer(PROCESS.TM, PURPOSE.PINREC, 'Top metal pin recognition')
        PA_DRW = Layer(PROCESS.PA, PURPOSE.DRW, 'Pad open')
        DO1_DRW = Layer(PROCESS.DO1, PURPOSE.DRW, 'SiN open for coupling')
        DT_DRW = Layer(PROCESS.DT, PURPOSE.DRW, 'Deep Si trench for edge coupler')
        LOGO_DRW = Layer(PROCESS.LOGO, PURPOSE.DRW, 'Logo, All logos made on the wafer must use this layer')
        METAL_DUMB = Layer(PROCESS.METAL, PURPOSE.DUMB, 'Metal dummy block')
        ALL_DUMB = Layer(PROCESS.ALL, PURPOSE.DUMB, 'All layer dummy block')
        REC_TXT = Layer(PROCESS.REC, PURPOSE.TXT, 'Text layer, not to print on wafer, use for TE/TM mode and C/O band description')
        OIOGC_PORT = Layer(PROCESS.OIOGC, PURPOSE.PORT, 'Grating coupler optical port, for testing')
        OIOGC_TXT = Layer(PROCESS.OIOGC, PURPOSE.TXT, 'Grating coupler optical port recognition text, not print on wafer')
        OIOEC_PORT = Layer(PROCESS.OIOEC, PURPOSE.PORT, 'Edge coupler optical port, for testing')
        OIOEC_TXT = Layer(PROCESS.OIOEC, PURPOSE.TXT, 'Edge coupler optical port recognition text, not print on wafer')
        EIORF_PORT = Layer(PROCESS.EIORF, PURPOSE.PORT, 'RF electrical port, for testing')
        EIORF_TXT = Layer(PROCESS.EIORF, PURPOSE.TXT, 'RF electrical port recognition text, not print on wafer')
        EIODC_PORT = Layer(PROCESS.EIODC, PURPOSE.PORT, 'DC electrical port, for testing')
        EIODC_TXT = Layer(PROCESS.EIODC, PURPOSE.TXT, 'DC electrical port recognition text, not print on wafer')
        OPTSI_TXT = Layer(PROCESS.OPTSI, PURPOSE.TXT, 'Pin rectangle text, for Si routing pin recognition')
        OPTSIN_TXT = Layer(PROCESS.OPTSIN, PURPOSE.TXT, 'Pin rectangle text, for SiN routing pin recognition')
        EPTM_TXT = Layer(PROCESS.EPTM, PURPOSE.TXT, 'Pin rectangle text, for all metal layer routing pin recognition')
        DEV_AREA = Layer(PROCESS.DEV, PURPOSE.AREA, 'Device area ')
        PAD_AREA = Layer(PROCESS.PAD, PURPOSE.AREA, 'PAD area')
        PAD_TXT = Layer(PROCESS.PAD, PURPOSE.TXT, 'PAD label text')
        BB_AREA = Layer(PROCESS.BB, PURPOSE.AREA, 'Blackbox area')
        BB_TXT = Layer(PROCESS.BB, PURPOSE.TXT, 'Blackbox label text')
        EC_AREA = Layer(PROCESS.EC, PURPOSE.AREA, 'Marking layer, mark the EC area,The EC taper area must be covered by the EC_AREA layer')
        BBSI_AREA = Layer(PROCESS.BBSI, PURPOSE.AREA, 'Blackbox area for Si device')
        BBSIN_AREA = Layer(PROCESS.BBSIN, PURPOSE.AREA, 'Blackbox area for SiN device')
        BBEC_AREA = Layer(PROCESS.BBEC, PURPOSE.AREA, 'Blackbox area for SiN device')
        BBACT_AREA = Layer(PROCESS.BBACT, PURPOSE.AREA, 'Blackbox area for SiN device device')
        FORBID_AREA = Layer(PROCESS.FORBID, PURPOSE.AREA, 'Forbid area for any drawing pattern')
        FLYLINE_MARK = Layer(PROCESS.FLYLINE, PURPOSE.MARK, 'Flyline for insufficient space in AutoLink')


For users using layout viewers (e.g. KLayout), they can import the layer properties file ``layers.lyp`` in ``technology/generated`` file folder.